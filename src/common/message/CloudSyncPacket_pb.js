// source: CloudSyncPacket.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.CloudSyncMessages.Header', null, global);
goog.exportSymbol('proto.CloudSyncMessages.MessageType', null, global);
goog.exportSymbol('proto.CloudSyncMessages.Packet', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CloudSyncMessages.Packet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CloudSyncMessages.Packet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CloudSyncMessages.Packet.displayName = 'proto.CloudSyncMessages.Packet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CloudSyncMessages.Header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CloudSyncMessages.Header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CloudSyncMessages.Header.displayName = 'proto.CloudSyncMessages.Header';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CloudSyncMessages.Packet.prototype.toObject = function(opt_includeInstance) {
  return proto.CloudSyncMessages.Packet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CloudSyncMessages.Packet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CloudSyncMessages.Packet.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.CloudSyncMessages.Header.toObject(includeInstance, f),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CloudSyncMessages.Packet}
 */
proto.CloudSyncMessages.Packet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CloudSyncMessages.Packet;
  return proto.CloudSyncMessages.Packet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CloudSyncMessages.Packet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CloudSyncMessages.Packet}
 */
proto.CloudSyncMessages.Packet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CloudSyncMessages.Header;
      reader.readMessage(value,proto.CloudSyncMessages.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CloudSyncMessages.Packet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CloudSyncMessages.Packet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CloudSyncMessages.Packet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CloudSyncMessages.Packet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CloudSyncMessages.Header.serializeBinaryToWriter
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional Header header = 1;
 * @return {?proto.CloudSyncMessages.Header}
 */
proto.CloudSyncMessages.Packet.prototype.getHeader = function() {
  return /** @type{?proto.CloudSyncMessages.Header} */ (
    jspb.Message.getWrapperField(this, proto.CloudSyncMessages.Header, 1));
};


/** @param {?proto.CloudSyncMessages.Header|undefined} value */
proto.CloudSyncMessages.Packet.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.CloudSyncMessages.Packet.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CloudSyncMessages.Packet.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes payload = 2;
 * @return {!(string|Uint8Array)}
 */
proto.CloudSyncMessages.Packet.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payload = 2;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.CloudSyncMessages.Packet.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.CloudSyncMessages.Packet.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.CloudSyncMessages.Packet.prototype.setPayload = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CloudSyncMessages.Header.prototype.toObject = function(opt_includeInstance) {
  return proto.CloudSyncMessages.Header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CloudSyncMessages.Header} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CloudSyncMessages.Header.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sessionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messageid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    version: jspb.Message.getFieldWithDefault(msg, 4, ""),
    senderid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    responsechannel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    responsecode: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CloudSyncMessages.Header}
 */
proto.CloudSyncMessages.Header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CloudSyncMessages.Header;
  return proto.CloudSyncMessages.Header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CloudSyncMessages.Header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CloudSyncMessages.Header}
 */
proto.CloudSyncMessages.Header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.CloudSyncMessages.MessageType} */ (reader.readEnum());
      msg.setMsgtype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsechannel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponsecode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CloudSyncMessages.Header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CloudSyncMessages.Header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CloudSyncMessages.Header} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CloudSyncMessages.Header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSenderid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getResponsechannel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getResponsecode();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional MessageType msgType = 1;
 * @return {!proto.CloudSyncMessages.MessageType}
 */
proto.CloudSyncMessages.Header.prototype.getMsgtype = function() {
  return /** @type {!proto.CloudSyncMessages.MessageType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.CloudSyncMessages.MessageType} value */
proto.CloudSyncMessages.Header.prototype.setMsgtype = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string sessionID = 2;
 * @return {string}
 */
proto.CloudSyncMessages.Header.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CloudSyncMessages.Header.prototype.setSessionid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string messageID = 3;
 * @return {string}
 */
proto.CloudSyncMessages.Header.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CloudSyncMessages.Header.prototype.setMessageid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.CloudSyncMessages.Header.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CloudSyncMessages.Header.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string senderID = 5;
 * @return {string}
 */
proto.CloudSyncMessages.Header.prototype.getSenderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.CloudSyncMessages.Header.prototype.setSenderid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string responseChannel = 6;
 * @return {string}
 */
proto.CloudSyncMessages.Header.prototype.getResponsechannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CloudSyncMessages.Header.prototype.setResponsechannel = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 responseCode = 7;
 * @return {number}
 */
proto.CloudSyncMessages.Header.prototype.getResponsecode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.CloudSyncMessages.Header.prototype.setResponsecode = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.CloudSyncMessages.MessageType = {
  JOIN_REQ: 0,
  JOIN_RESP: 1,
  DEVICE_REQ: 2,
  DEVICE_RESP: 3,
  LEAVE_REQ: 4,
  LEAVE_RESP: 5,
  TIMELINE_REG_REQ: 6,
  TIMELINE_REG_RESP: 7,
  TIMELINE_DEREG_REQ: 8,
  TIMELINE_DEREG_RESP: 9,
  TIMELINE_REQ: 10,
  TIMELINE_QUERY: 11,
  TIMELINE_RESP: 12,
  TIMELINE_SUB_REQ: 13,
  TIMELINE_SUB_RESP: 14,
  TIMELINE_UPDATE_REQ: 15,
  TIMELINE_UPDATE_RESP: 16,
  STOP_TIMELINE_UPDATE_REQ: 17,
  TIMELINE_UPDATE: 18,
  CONTENT_ID_CHANGE: 19,
  DEVICE_STATUS: 20,
  UNEXPECTED_DEVICE_EXIT: 21,
  SYNC_TIMELINES_AVAIL: 22
};

goog.object.extend(exports, proto.CloudSyncMessages);
